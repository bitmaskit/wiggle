name: Go

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: false
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        os: [ macOS-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -o wiggle-${{ matrix.os }} -v ./...

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wiggle-binaries-${{ matrix.os }}
          path: wiggle-${{ matrix.os }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate semver tag
        id: tag
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            echo "tag_name=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
            MINOR=$(echo $LATEST_TAG | cut -d. -f2)
            PATCH=$(echo $LATEST_TAG | cut -d. -f3)
            NEW_TAG="${MAJOR}.${MINOR}.$((PATCH + 1))"
            echo "tag_name=${NEW_TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          generate_release_notes: true
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Release ${{ steps.tag.outputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}